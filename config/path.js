const { resolve } = require("../util")
const {
  DIRNAME_BUILD,
  DIRNAME_STATIC,
  DIRNAME_SRC,
  DIRNAME_PAGES,
  DIRNAME_ASSETS,
  DIRNAME_FONTS,
  DIRNAME_ICONS,
  DIRNAME_IMAGES,
  DIRNAME_MEDIA,
  DIRNAME_CSS,
  DIRNAME_JS,
  DIRNAME_TEMPLATES,
  DIRNAME_DIST,
  DIRNAME_COMPILER_DATA,
  FILENAME_EOFOL_NODE,
  FILENAME_EOFOL_CONFIG,
} = require("./env")

const PATH_CWD = resolve(process.cwd())

const PATH_SRC = resolve(PATH_CWD, DIRNAME_SRC)
const PATH_BUILD = resolve(PATH_CWD, DIRNAME_BUILD)
const PATH_STATIC = resolve(PATH_CWD, DIRNAME_STATIC)
const PATH_PAGES = resolve(PATH_CWD, DIRNAME_PAGES)
const PATH_ASSETS = resolve(PATH_BUILD, DIRNAME_ASSETS)
const PATH_JS = resolve(PATH_ASSETS, DIRNAME_JS)
const PATH_CSS = resolve(PATH_ASSETS, DIRNAME_CSS)
const PATH_MEDIA = resolve(PATH_ASSETS, DIRNAME_MEDIA)
const PATH_IMAGES = resolve(PATH_MEDIA, DIRNAME_IMAGES)
const PATH_ICONS = resolve(PATH_MEDIA, DIRNAME_ICONS)
const PATH_FONTS = resolve(PATH_MEDIA, DIRNAME_FONTS)
const PATH_TEMPLATES = resolve(PATH_CWD, DIRNAME_TEMPLATES)
const PATH_DIST = resolve(PATH_CWD, DIRNAME_DIST)

const PATH_COMPILER_DATA = resolve(PATH_CWD, DIRNAME_COMPILER_DATA)

const PATH_EOFOL_NODE = resolve(PATH_SRC, FILENAME_EOFOL_NODE)
const PATH_EOFOL_CONFIG = resolve(PATH_SRC, FILENAME_EOFOL_CONFIG)
const PATH_EOFOL_CONFIG_DEFAULT = resolve(PATH_COMPILER_DATA, "eofol-config", "eofol-config-default.js")
const PATH_METADATA_DEFAULT = resolve(PATH_COMPILER_DATA, "metadata", "metadata-default.js")
const PATH_SERVICE_WORKER_SCRIPT = resolve(PATH_COMPILER_DATA, "service-worker", "service-worker.js")
const PATH_BASE_STYLES = resolve(PATH_COMPILER_DATA, "styles", "base.css")

module.exports = {
  PATH_CWD,
  PATH_BUILD,
  PATH_STATIC,
  PATH_SRC,
  PATH_PAGES,
  PATH_ASSETS,
  PATH_JS,
  PATH_CSS,
  PATH_MEDIA,
  PATH_IMAGES,
  PATH_ICONS,
  PATH_FONTS,
  PATH_TEMPLATES,
  PATH_DIST,
  PATH_COMPILER_DATA,
  PATH_EOFOL_NODE,
  PATH_EOFOL_CONFIG,
  PATH_EOFOL_CONFIG_DEFAULT,
  PATH_METADATA_DEFAULT,
  PATH_SERVICE_WORKER_SCRIPT,
  PATH_BASE_STYLES,
}
